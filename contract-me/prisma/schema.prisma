// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  CONTRACTOR
}

enum IssueStatus {
  SUBMITTED
  ANALYZING
  PENDING_CONTRACTOR
  ASSIGNED
  IN_PROGRESS
  COMPLETED
  CANCELLED
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  username    String   @unique
  phoneNumber String?
  password    String
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  issues                Issue[]
  claimedEnrichedIssues EnrichedIssue[]

  @@map("users")
}

model Issue {
  id          String      @id @default(cuid())
  title       String?
  description String
  status      IssueStatus @default(SUBMITTED)
  userId      String
  user        User        @relation(fields: [userId], references: [id])
  attachments String[]
  enriched    EnrichedIssue?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("issues")
}

model EnrichedIssue {
  id                        String   @id @default(cuid())
  issueId                   String   @unique
  issue                     Issue    @relation(fields: [issueId], references: [id], onDelete: Cascade)
  
  // OpenAI Analysis Results
  identifiedProblem         String
  repairSolution            String
  estimatedTimeHours        Float?
  difficultyLevel           String   // "Easy", "Medium", "Hard", "Expert"
  
  // Items and Costs
  requiredItems             Json     // Array of {name: string, estimatedCost: number, quantity?: number, unit?: string}
  totalEstimatedCost        Float?
  
  // Additional Information
  questionsForUser          String[] // Things to ask the customer for clarification
  contractorChecklist       String[] // Things contractor should verify on-site
  
  // Contractor Assignment
  claimedByContractorId     String?
  claimedAt                 DateTime?
  contractorUser            User?    @relation(fields: [claimedByContractorId], references: [id])
  
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  @@map("enriched_issues")
}
